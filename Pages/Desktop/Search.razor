@page "/ru/search"
@page "/en/search"
@using Data.Services
@{
    SearchResultsModel Result = new SearchResultsModel();
    var cannonical = Settings.HomePage + Utils.LangHref(lang, "search");
    if (!string.IsNullOrEmpty(search))
    {

        Result.OriginalRequest = search;
        Result.RequestParts = Utils.RqParts(search);

        if (Result.RequestParts != null && Result.RequestParts.Count > 0)
        {
            var Groups = DbContext.GetAllItemsFromCollection<WareGroup>();

            foreach (var G in Groups)
            {
                if (G.IncludeInSiteMap && G.MatchSearch(Result.RequestParts))
                {

                    Result.Links.Add(new SearchResultModel()
                    {
                        URL = Utils.LangHref(lang, "cat/"+G.GetSlugOrID()),
                        Text = Utils.LC(G.Name,lang)
                    });
                }

                List<WareItem> Wares;
                Wares = DbContext.LoadWareItems<WareItem>(G.IdAsString);

                foreach (var I in Wares)
                {
                    if (I.MatchSearch(Result.RequestParts))
                    {
                        string Name = Utils.LC(I.Name,lang);
                        if (string.IsNullOrEmpty(Name))
                        {
                            Name = Utils.LC(G.Name,lang);
                        }

                        Result.Links.Add(new SearchResultModel()
                        {
                            URL = Utils.LangHref(lang, "art/" + I.GetSlugOrID()),
                            Text = I.FinalArticle + " " + Name
                        });
                    }
                }
            }

            Result.Links = Result.Links.Distinct(new SearchResultModelEqualityComparer()).ToList();
        }
    }

}
<Title>@Utils.LC("Результаты поиска", "Search Results", lang)</Title>
<div class="content-container">
    <div class="part-container">
        <h1 class="main-title">@Utils.LC("Результаты поиска", "Search Results", lang)</h1>
        @if (Result.Links.Count == 0 || Result.RequestParts == null)
        {
            @if (lang == Settings.LanguageRU)
            {
             
                <div class="txt-talk">
                    <p>К сожалению, поиск не дал результатов. Попробуйте задать другой набор слов для поиска.</p>
                    <p></p>
                    <h2 class="main-title">Правила написания запросов</h2>
                    <p>
                        Для поиска требуется ввести запрос, состоящий из одного или нескольких слов или артикулов (каждое не короче 3 знаков).
                        Выводятся страницы, на которых встречаются все слова, указанные в запросе.
                        Можно указывать части слов, главное, чтобы они были достаточны для нахождения слова во всех формах.
                    </p>
                    <p>
                        Например, введите "<i>полиэт труб</i>", и Вы увидите все страницы, которые содержат сочетания типа<br />
                        - труба полиэтиленовая<br />
                        - трубы полиэтиленовые<br />
                        и т.д.
                    </p>
                </div>
            }
            else
            {
                <div class="txt-talk">
                    <p>Unfortunately, the search gave no results. Please try to input another words.</p>
                    <p></p>
                    <h2 class="main-title">Query rules</h2>
                    <p>
                        To find something, you need to enter a query consisting of one or more words or articles (each must be 3 characters or longer).
                        The result will list pages which contain all the words in the query.
                        You may specify just words parts that are enough to find a word in all forms.
                    </p>
                    <p>
                        For example, enter "<i>poly pipe</i>", and you will get all the pages containing<br />
                        - polythene pipe<br />
                        - трубы полиэтиленовые<br />
                        etc.
                    </p>
                </div>
            }
        }
        else
        {
            for (int i = 0; i < Result.Links.Count; i++)
            {
                var L = Result.Links[i];
                <p><a href="@L.URL">@Utils.HtmlRaw(!string.IsNullOrEmpty(L.Text) ? L.Text : L.URL)</a></p>
            }
        }
    </div>
</div>
@code
{
    [CascadingParameter(Name = "search")] string search { get; set; }
    [CascadingParameter] string lang { get; set; }
}
