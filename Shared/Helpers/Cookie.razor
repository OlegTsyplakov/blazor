@inject IJSRuntime JsRuntime;
@inject Mobile mobile

@code
{


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {

            //await JsRuntime.InvokeAsync<object>("WriteCookie.WriteCookie", "cookieName", "cookieValue", DateTime.Now.AddMinutes(10));

            var result = await JsRuntime.InvokeAsync<string>("Module.ReadCookie", "uid");
            if (!string.IsNullOrEmpty(result))
            {
                EncryptionHelper.Decrypt(result);
                mobile.IsAuthorized = true;

                StateHasChanged();
            }

        }
        await base.OnAfterRenderAsync(firstRender);

    }
    //protected async Task ReadCookies()
    //{

    //    myCookieValue = await JsRuntime.InvokeAsync<string>("ReadCookie.ReadCookie", "uid");

    //}
}